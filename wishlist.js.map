{"version":3,"file":"wishlist.js","sources":["../src/wishlist.js"],"sourcesContent":["//Логіка сторінки Wishlist\n\nimport { fetchProductsById } from \"./js/products-api\";\nimport { renderProducts, renderProductInModal } from \"./js/render-function\";\nimport { productsList, notFoundDiv, modal, wishButton, navCount, cartButton, navCountCart } from \"./js/constants\";\nimport { getWishlist, addToWishlist, removeFromWishlist, isInWishlist, addToCart, isInCart, removeFromCart, getCart } from \"./js/storage\";\nimport { changeTheme } from \"./js/helpers\";\n\n    \n    \n// Функція оновлення кількості у навігації\nconst updateNavCount = () => {\n  const wishlist = getWishlist();\n  navCount.textContent = wishlist.length;\n};\n\nconst updateNavCountCart = () => {\n  const cart = getCart();\n  const totalQuantity = cart.reduce((sum, item) => sum + (item.quantity || 1), 0);\n  navCountCart.textContent = totalQuantity;\n}\n\n// Функція оновлення кнопки Wishlist в модалці\nconst updateWishlistButton = (productId) => {\n  if (isInWishlist(productId)) {\n    wishButton.textContent = 'Remove from Wishlist';\n  } else {\n    wishButton.textContent = 'Add to Wishlist';\n  }\n};\n\n\n// Завантажити продукти з wishlist та відрендерити їх\nconst loadWishlistProducts = async () => {\n  const wishlist = getWishlist();\n\n  if (wishlist.length === 0) {\n    notFoundDiv.classList.add('not-found--visible');\n    productsList.innerHTML = '';\n    return;\n  }\n\n  try {\n    const productPromises = wishlist.map(id => fetchProductsById(id));\n    const products = await Promise.all(productPromises);\n\n    notFoundDiv.classList.remove('not-found--visible');\n    renderProducts(products);\n  } catch (error) {\n    console.error('Помилка при завантаженні wishlist:', error);\n    notFoundDiv.classList.add('not-found--visible');\n    productsList.innerHTML = '';\n  }\n};\n\n// При кліку на продукт відкриваємо модалку\nproductsList.addEventListener(\"click\", async (event) => {\n  const productItem = event.target.closest(\"li.products__item\");\n  if (!productItem) return;\n\n  const productId = productItem.dataset.id;\n  if (!productId) return;\n\n  try {\n    const product = await fetchProductsById(productId);\n    renderProductInModal(product);\n    modal.classList.add(\"modal--is-open\");\n\n    updateWishlistButton(productId);\n    updateCartButton(productId); // make sure to also update cart button\n\n    // --- Wishlist Button Logic ---\n    wishButton.onclick = () => {\n      if (isInWishlist(productId)) {\n        removeFromWishlist(productId);\n      } else {\n        addToWishlist(productId);\n      }\n      updateWishlistButton(productId);\n      updateNavCount();\n      loadWishlistProducts();\n    };\n\n    // --- Cart Button Logic ---\n    cartButton.onclick = () => {\n      if (isInCart(productId)) {\n        removeFromCart(productId);\n      } else {\n        addToCart(productId);\n\n        // Remove from wishlist if added to cart\n        if (isInWishlist(productId)) {\n          removeFromWishlist(productId);\n          updateNavCount();\n          loadWishlistProducts();\n        }\n      }\n\n      updateCartButton(productId);\n      updateNavCountCart();\n    };\n\n  } catch (error) {\n    console.error('Помилка при завантаженні продукту:', error);\n  }\n});\n\n// --- Move helper function outside the listener ---\nconst updateCartButton = (productId) => {\n  if (isInCart(productId)) {\n    cartButton.textContent = \"Remove from Cart\";\n  } else {\n    cartButton.textContent = \"Add to Cart\";\n  }\n};\n\n\n// Закриття модалки\nmodal.addEventListener(\"click\", (event) => {\n    if (event.target === modal || event.target.classList.contains(\"modal__close-btn\")) {\n        modal.classList.remove(\"modal--is-open\");\n    }\n});\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    loadWishlistProducts();\n    updateNavCount(); // оновлення лічильника при завантаженні сторінки\n    updateNavCountCart();\n});\n\nchangeTheme();"],"names":["updateNavCount","wishlist","getWishlist","navCount","updateNavCountCart","totalQuantity","getCart","sum","item","navCountCart","updateWishlistButton","productId","isInWishlist","wishButton","loadWishlistProducts","notFoundDiv","productsList","productPromises","id","fetchProductsById","products","renderProducts","error","event","productItem","product","renderProductInModal","modal","updateCartButton","removeFromWishlist","addToWishlist","cartButton","isInCart","removeFromCart","addToCart","changeTheme"],"mappings":"8MAWA,MAAMA,EAAiB,IAAM,CAC3B,MAAMC,EAAWC,IACjBC,EAAS,YAAcF,EAAS,MAClC,EAEMG,EAAqB,IAAM,CAE/B,MAAMC,EADOC,IACc,OAAO,CAACC,EAAKC,IAASD,GAAOC,EAAK,UAAY,GAAI,CAAC,EAC9EC,EAAa,YAAcJ,CAC7B,EAGMK,EAAwBC,GAAc,CACtCC,EAAaD,CAAS,EACxBE,EAAW,YAAc,uBAEzBA,EAAW,YAAc,iBAE7B,EAIMC,EAAuB,SAAY,CACvC,MAAMb,EAAWC,IAEjB,GAAID,EAAS,SAAW,EAAG,CACzBc,EAAY,UAAU,IAAI,oBAAoB,EAC9CC,EAAa,UAAY,GACzB,MACD,CAED,GAAI,CACF,MAAMC,EAAkBhB,EAAS,IAAIiB,GAAMC,EAAkBD,CAAE,CAAC,EAC1DE,EAAW,MAAM,QAAQ,IAAIH,CAAe,EAElDF,EAAY,UAAU,OAAO,oBAAoB,EACjDM,EAAeD,CAAQ,CACxB,OAAQE,EAAO,CACd,QAAQ,MAAM,qCAAsCA,CAAK,EACzDP,EAAY,UAAU,IAAI,oBAAoB,EAC9CC,EAAa,UAAY,EAC1B,CACH,EAGAA,EAAa,iBAAiB,QAAS,MAAOO,GAAU,CACtD,MAAMC,EAAcD,EAAM,OAAO,QAAQ,mBAAmB,EAC5D,GAAI,CAACC,EAAa,OAElB,MAAMb,EAAYa,EAAY,QAAQ,GACtC,GAAKb,EAEL,GAAI,CACF,MAAMc,EAAU,MAAMN,EAAkBR,CAAS,EACjDe,EAAqBD,CAAO,EAC5BE,EAAM,UAAU,IAAI,gBAAgB,EAEpCjB,EAAqBC,CAAS,EAC9BiB,EAAiBjB,CAAS,EAG1BE,EAAW,QAAU,IAAM,CACrBD,EAAaD,CAAS,EACxBkB,EAAmBlB,CAAS,EAE5BmB,EAAcnB,CAAS,EAEzBD,EAAqBC,CAAS,EAC9BX,IACAc,GACN,EAGIiB,EAAW,QAAU,IAAM,CACrBC,EAASrB,CAAS,EACpBsB,EAAetB,CAAS,GAExBuB,EAAUvB,CAAS,EAGfC,EAAaD,CAAS,IACxBkB,EAAmBlB,CAAS,EAC5BX,IACAc,MAIJc,EAAiBjB,CAAS,EAC1BP,GACN,CAEG,OAAQkB,EAAO,CACd,QAAQ,MAAM,qCAAsCA,CAAK,CAC1D,CACH,CAAC,EAGD,MAAMM,EAAoBjB,GAAc,CAClCqB,EAASrB,CAAS,EACpBoB,EAAW,YAAc,mBAEzBA,EAAW,YAAc,aAE7B,EAIAJ,EAAM,iBAAiB,QAAUJ,GAAU,EACnCA,EAAM,SAAWI,GAASJ,EAAM,OAAO,UAAU,SAAS,kBAAkB,IAC5EI,EAAM,UAAU,OAAO,gBAAgB,CAE/C,CAAC,EAED,SAAS,iBAAiB,mBAAoB,IAAM,CAChDb,IACAd,IACAI,GACJ,CAAC,EAED+B,EAAa"}